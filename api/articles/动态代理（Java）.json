{"title":"动态代理（Java）","slug":"动态代理（Java）","date":"2021-04-22T16:00:00.000Z","updated":"2021-04-24T09:41:50.674Z","comments":true,"path":"api/articles/动态代理（Java）.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h3 id=\"动态代理（JDK动态代理、Cglib动态代理）\"><a href=\"#动态代理（JDK动态代理、Cglib动态代理）\" class=\"headerlink\" title=\"动态代理（JDK动态代理、Cglib动态代理）\"></a>动态代理（JDK动态代理、Cglib动态代理）</h3><p>代理模式是一种常见的设计模式，在Java中涉及广泛，例如spring底层的AOP用的就是这种编程思想。</p>\n<p>顾名思义，代理模式即是给目标对象提供一个代理对象（proxy），并由代理对象控制对目标对象的引用，也可以在目标基础上作增强。</p>\n<p>首先了解下静态代理，也可以理解为手动对目标对象进行代理，即</p>\n","categories":[],"tags":[]}